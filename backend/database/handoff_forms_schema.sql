-- Handoff Forms Table Schema
-- Stores generated handoff forms for healthcare professional notifications

CREATE TABLE IF NOT EXISTS public.handoff_forms (
  id UUID NOT NULL DEFAULT gen_random_uuid(),
  form_number TEXT NOT NULL UNIQUE, -- e.g., "HO-2025-0001"
  patient_id TEXT NOT NULL,
  alert_ids JSONB NOT NULL DEFAULT '[]'::jsonb, -- Array of alert UUIDs

  -- Form Content (stored as JSONB for flexibility)
  content JSONB NOT NULL,

  -- PDF Information
  pdf_url TEXT NULL,
  pdf_path TEXT NULL,
  pdf_generated_at TIMESTAMP WITH TIME ZONE NULL,

  -- Status Tracking
  status TEXT NOT NULL DEFAULT 'generated',

  -- Email Tracking
  emailed_to JSONB NULL DEFAULT '[]'::jsonb, -- Array of email addresses
  email_sent_at TIMESTAMP WITH TIME ZONE NULL,
  email_delivery_status TEXT NULL,

  -- Acknowledgment
  acknowledged_by TEXT NULL,
  acknowledged_at TIMESTAMP WITH TIME ZONE NULL,

  -- Audit Fields
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
  created_by TEXT NOT NULL DEFAULT 'FETCH_AI_HANDOFF_AGENT',

  -- Constraints
  CONSTRAINT handoff_forms_pkey PRIMARY KEY (id),
  CONSTRAINT handoff_forms_patient_id_fkey FOREIGN KEY (patient_id)
    REFERENCES patients (patient_id) ON DELETE CASCADE,
  CONSTRAINT handoff_forms_status_check CHECK (
    status = ANY (ARRAY[
      'generated'::text,
      'sent'::text,
      'acknowledged'::text,
      'completed'::text,
      'failed'::text
    ])
  )
) TABLESPACE pg_default;

-- Indexes for performance
CREATE INDEX IF NOT EXISTS idx_handoff_forms_patient_id
  ON public.handoff_forms USING btree (patient_id) TABLESPACE pg_default;

CREATE INDEX IF NOT EXISTS idx_handoff_forms_status
  ON public.handoff_forms USING btree (status) TABLESPACE pg_default;

CREATE INDEX IF NOT EXISTS idx_handoff_forms_created_at
  ON public.handoff_forms USING btree (created_at DESC) TABLESPACE pg_default;

CREATE INDEX IF NOT EXISTS idx_handoff_forms_form_number
  ON public.handoff_forms USING btree (form_number) TABLESPACE pg_default;

-- GIN index for JSONB alert_ids for efficient lookups
CREATE INDEX IF NOT EXISTS idx_handoff_forms_alert_ids
  ON public.handoff_forms USING gin (alert_ids) TABLESPACE pg_default;

-- Function to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_handoff_forms_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger to automatically update updated_at
CREATE TRIGGER update_handoff_forms_updated_at_trigger
  BEFORE UPDATE ON handoff_forms
  FOR EACH ROW
  EXECUTE FUNCTION update_handoff_forms_updated_at();

-- Function to generate form number (auto-increment with year prefix)
CREATE OR REPLACE FUNCTION generate_form_number()
RETURNS TEXT AS $$
DECLARE
  year_prefix TEXT;
  next_num INTEGER;
  form_num TEXT;
BEGIN
  year_prefix := 'HO-' || TO_CHAR(NOW(), 'YYYY') || '-';

  -- Get the highest number for this year
  SELECT COALESCE(
    MAX(
      CAST(
        SUBSTRING(form_number FROM LENGTH(year_prefix) + 1) AS INTEGER
      )
    ), 0
  ) + 1
  INTO next_num
  FROM handoff_forms
  WHERE form_number LIKE year_prefix || '%';

  form_num := year_prefix || LPAD(next_num::TEXT, 4, '0');
  RETURN form_num;
END;
$$ LANGUAGE plpgsql;

-- Comments for documentation
COMMENT ON TABLE public.handoff_forms IS 'Stores handoff forms generated by Fetch.ai agent from alerts for healthcare professional notifications';
COMMENT ON COLUMN public.handoff_forms.form_number IS 'Unique sequential form number with year prefix (e.g., HO-2025-0001)';
COMMENT ON COLUMN public.handoff_forms.content IS 'Complete form content including patient info, alert summary, and recommendations';
COMMENT ON COLUMN public.handoff_forms.alert_ids IS 'JSON array of alert UUIDs included in this handoff form';
COMMENT ON COLUMN public.handoff_forms.emailed_to IS 'JSON array of email addresses where form was sent';
COMMENT ON COLUMN public.handoff_forms.status IS 'Form lifecycle status: generated, sent, acknowledged, completed, failed';
