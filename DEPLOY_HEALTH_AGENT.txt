🏥 HAVEN HEALTH AGENT - DEPLOYMENT GUIDE
=========================================

📋 STEP 1: COPY AGENT CODE
---------------------------
1. Open: haven-agents/agents/haven_health_agentverse.py
2. Select ALL code (Cmd+A)
3. Copy (Cmd+C)


📬 STEP 2: CREATE AGENT ON AGENTVERSE
--------------------------------------
1. Go to: https://agentverse.ai
2. Click "Create Agent"
3. Name: haven_health_agent
4. Handle: @haven-health-agent
5. Paste the code into the editor
6. Save


🔑 STEP 3: GET YOUR MAILBOX KEY
--------------------------------
1. In Agentverse, go to your agent
2. Click "Mailbox" tab
3. Copy the mailbox key (starts with "eyJ..." or "mbox_...")
4. Save it - you'll need it for the code


⚙️ STEP 4: UPDATE ENVIRONMENT
------------------------------
Add to your .env file (both haven-agents/.env and backend/.env):

AGENT_MAILBOX_KEY=your_mailbox_key_here
ANTHROPIC_API_KEY=your_anthropic_key_here


📝 STEP 5: ADD AGENT DESCRIPTION (Agentverse)
----------------------------------------------
In "Overview" → "About":

Autonomous AI doctor for CAR-T clinical trials. TAKES ACTION: diagnoses symptoms, 
recommends treatment protocols, finds patterns across patients, and escalates 
emergencies. Not just chat - real autonomous decision-making for patient safety.


🏷️ STEP 6: ADD TAGS (Agentverse)
---------------------------------
Categories:
- Healthcare
- AI Agent
- Innovation Lab
- Medical

Add these badges to README (in Agentverse):
![tag:innovationlab](https://img.shields.io/badge/innovationlab-3D8BD3)
![tag:hackathon](https://img.shields.io/badge/hackathon-5F43F1)
![tag:healthcare](https://img.shields.io/badge/healthcare-FF6B6B)


🚀 STEP 7: START THE AGENT
---------------------------
1. Click "Start" in Agentverse
2. Wait for logs to show "Agent ready"
3. Check for: "Registered to Almanac api fast track"


🧪 STEP 8: TEST ON ASI:ONE (Try the ACTIONS!)
----------------------------------------------
Go to: https://asi.one

Test basic chat:
1. "@haven-health-agent hello"
2. "@haven-health-agent help"

Test ACTIONS (the cool stuff):
3. "@haven-health-agent patient has chest pain"
   → Should SEARCH and DIAGNOSE with specific recommendations
4. "@haven-health-agent recommend treatment protocol"
   → Should GENERATE protocol based on patient state
5. "@haven-health-agent find patterns across patients"
   → Should CORRELATE and identify safety signals
6. "@haven-health-agent status"
   → Should show monitoring overview

Expected: Agent doesn't just respond - it takes ACTION!


✅ STEP 9: VERIFY INTEGRATION
------------------------------
Check your agent in Agentverse shows:
- Status: Active (green)
- Protocols: 2 registered
  - HealthMonitoring v1.0
  - AgentChatProtocol v0.3.0
- No errors in logs


🔗 STEP 10: INTEGRATE WITH HAVEN APP
-------------------------------------
Your backend is already configured! The agent will:
1. Receive patient data from CV pipeline
2. Analyze vitals and behavior
3. Generate alerts for medical staff
4. Broadcast to dashboard via WebSocket

Endpoints available:
- GET /health-agent/status
- GET /health-agent/patients
- GET /health-agent/alerts
- GET /health-agent/patient/{patient_id}


📊 TROUBLESHOOTING
------------------
If agent isn't responding on ASI:One:
1. Check agent is "Active" in Agentverse
2. Verify mailbox key is correct
3. Look for errors in Agentverse logs
4. Make sure protocols show as "Published"
5. Wait 5-10 minutes for indexing

If agent works on ASI:One but not in Haven app:
1. Check backend logs for errors
2. Verify ANTHROPIC_API_KEY is set
3. Restart backend: python backend/main.py
4. Check WebSocket is connected


🎯 SUCCESS CRITERIA
-------------------
✅ Agent shows as Active in Agentverse
✅ Agent responds on ASI:One
✅ Protocols are published
✅ Backend receives patient data
✅ Alerts appear in Haven dashboard


📞 AGENT ADDRESS
----------------
After deployment, your agent address will look like:
agent1q... (copy from Agentverse logs)

Save this address - you'll need it to send messages to your agent!


🏆 FETCH.AI PRIZE CHECKLIST
----------------------------
✅ Agent registered on Agentverse
✅ Chat Protocol enabled
✅ Claude integration (in Haven backend)
✅ Solves real problem (patient safety)
✅ Well-documented
✅ Innovation Lab badges added
✅ Discoverable on ASI:One

You're ready to submit!
